{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.html","./src/app/app.module.ts","./src/app/services/login.service.ts","./src/app/views/component-container.directive.ts","./src/app/views/login.component.ts","./src/app/views/login.component.html","./src/app/views/registration.component.ts","./src/app/views/registration.component.html","./src/app/views/sandbox.component.ts","./src/app/views/sandbox.component.html","./src/app/views/startpage.component.ts","./src/app/views/startpage.component.html","./src/app/views/wiki.component.ts","./src/critters/CEditController.ts","./src/critters/CEditModel.ts","./src/critters/CView.ts","./src/critters/CrittersWorld.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './views/login.component';\r\nimport { SandboxComponent } from './views/sandbox.component';\r\nimport { StartpageComponent } from './views/startpage.component';\r\nimport { WikiComponent } from './views/wiki.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n    { path: \"home\", component: StartpageComponent },\r\n    { path: \"sandbox\", component: SandboxComponent },\r\n    { path: \"wiki\", component: WikiComponent },\r\n    { path: \"login\", component: LoginComponent },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes,\r\n        { useHash: true }\r\n    )],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.html' ,\n    styles: []\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SandboxComponent } from './views/sandbox.component';\nimport { StartpageComponent } from './views/startpage.component';\nimport { WikiComponent } from './views/wiki.component';\nimport { LoginComponent } from './views/login.component';\nimport { ComponentContainerDirective } from './views/component-container.directive';\nimport { RegistrationComponent } from './views/registration.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,    \n    SandboxComponent,\n    StartpageComponent,\n    WikiComponent,\n    LoginComponent,\n    ComponentContainerDirective,\n    RegistrationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { lastValueFrom } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoginService {\r\n    async Logout() {\r\n        return lastValueFrom(this.http.get(\"/account/logout\"));\r\n    }\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    async getCurrentUserInfo(): Promise<UserInfo> {\r\n        return lastValueFrom(this.http.get<UserInfo>(\"/account/userinfo\"));\r\n    }    \r\n\r\n}\r\n\r\nexport class UserInfo {\r\n    email!: string;\r\n    signedIn!: boolean;\r\n}\r\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[component-container]',\n})\nexport class ComponentContainerDirective {\n    constructor(public viewContainerRef: ViewContainerRef) { }\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { lastValueFrom } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: 'login.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    \r\n    constructor(private http: HttpClient) { }\r\n\r\n    @Output() result = new EventEmitter<String>();\r\n\r\n    eMail!: string;\r\n    password!: string;\r\n    loginFailed: boolean = false;\r\n\r\n    ngOnInit(): void {\r\n    }    \r\n\r\n    async onOkButton() {\r\n        let res = await lastValueFrom(this.http.post(\"/account/Login\", { Mail: this.eMail, Password: this.password }));\r\n        console.log(res);\r\n        if (res)\r\n            this.result.emit(\"ok\");\r\n        else {\r\n            this.loginFailed = true;\r\n            console.log(\"Login was not successful\");\r\n        }\r\n    }\r\n\r\n    onCancelButton() {\r\n        this.result.emit(\"cancel\");\r\n    }\r\n\r\n    onRegisterButton() {\r\n        this.result.emit(\"register\");\r\n    }\r\n\r\n}\r\n\r\n\r\n","<div class=\"modal\"\r\n     tabindex=\"-1\"\r\n     role=\"dialog\"\r\n     [ngStyle]=\"{'display':'block'}\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\">Login</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p class=\"text-danger\" [hidden]=\"!loginFailed\">Incorrect password or login</p>\r\n                <div #titleinput class=\"mb-3\">\r\n                    <label for=\"emailInLogin\" class=\"form-label\">Email</label>\r\n                    <input #nameInput type=\"email\" class=\"form-control\" placeholder=\"example@mail.com\" aria-label=\"Email\" aria-describedby=\"basic-addon2\"\r\n                           value={{eMail}} id=\"emailInLogin\"\r\n                           (input)=\"eMail = nameInput.value\">\r\n                </div>\r\n                <div #titleinput class=\"mb-3\">\r\n                    <label for=\"passwordInLogin\" class=\"form-label\">Password</label>\r\n                    <input #passInput type=\"password\" autocomplete=\"off\" class=\"form-control\" id=\"passwordInLogin\" aria-label=\"Password\" aria-describedby=\"basic-addon2\"\r\n                           value={{password}}\r\n                           (input)=\"password = passInput.value\">\r\n                </div>\r\n                <a [routerLink]=\"[]\" class=\"link-primary float-end\" (click)=\"onRegisterButton()\">Register</a>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\"  class=\"btn btn-outline-primary\"\r\n                        (click)=\"onOkButton()\">\r\n                    Sign in\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-outline-primary\"\r\n                        (click)=\"onCancelButton()\">\r\n                    Cancel\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { lastValueFrom } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: 'registration.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    @Output() result = new EventEmitter<String>();\r\n\r\n    registrationFailed: boolean = false;\r\n    registrationError: string = \"\";\r\n    eMail!: string;\r\n    password!: string;\r\n    password2!: string;\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    async onOkButton() {\r\n        let res = await lastValueFrom(this.http.post(\"/account/Register\", { Mail: this.eMail, Password: this.password })) as any;\r\n        console.log(res);\r\n        if (res.success) {\r\n            console.log(\"Registration success\");\r\n            this.result.emit(\"ok\");\r\n        }\r\n        else {\r\n            this.registrationFailed = true;\r\n            this.registrationError = res.errorDescription;\r\n            console.log(\"Registration failed:\" + this.registrationError);\r\n        }        \r\n    }\r\n\r\n    onCancelButton() {\r\n        this.result.emit(\"cancel\");\r\n    }\r\n\r\n}\r\n","<div class=\"modal\"\r\n     tabindex=\"-1\"\r\n     role=\"dialog\"\r\n     [ngStyle]=\"{'display':'block'}\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\">Register</h4>\r\n            </div>            \r\n            <div class=\"modal-body\">\r\n                <p class=\"text-danger\" [hidden]=\"!registrationFailed\">{{registrationError}}</p>\r\n                <div #titleinput class=\"mb-3\">\r\n                    <label for=\"emailInRegister\" class=\"form-label\">Email</label>\r\n                    <input #nameInput type=\"email\" class=\"form-control\" placeholder=\"Email\" aria-label=\"Email\" aria-describedby=\"basic-addon2\"\r\n                           value={{eMail}} id=\"emailInLogin\"\r\n                           (input)=\"eMail = nameInput.value\">\r\n                </div>\r\n                <div #titleinput class=\"mb-3\">\r\n                    <label for=\"passwordInRegister\" class=\"form-label\">Password</label>\r\n                    <input #passInput type=\"password\" class=\"form-control\" aria-label=\"Password\" aria-describedby=\"basic-addon2\"\r\n                           value={{password}} id=\"passwordInRegister\"\r\n                           (input)=\"password = passInput.value\">\r\n                </div>\r\n                <div #titleinput class=\"mb-3\">\r\n                    <label for=\"passwordInRegister2\" class=\"form-label\">Repeat password</label>\r\n                    <input #passInput2 type=\"password\" class=\"form-control\" aria-label=\"Repeat password\" aria-describedby=\"basic-addon2\"\r\n                           value={{password2}} id=\"passwordInRegister2\"\r\n                           (input)=\"password2 = passInput2.value\">\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-primary\"\r\n                        (click)=\"onOkButton()\">\r\n                    Register\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-primary\"\r\n                        (click)=\"onCancelButton()\">\r\n                    Cancel\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { lastValueFrom } from 'rxjs/internal/lastValueFrom';\r\nimport { CEditController } from '../../critters/CEditController';\r\nimport { CEditModel } from '../../critters/CEditModel';\r\nimport { CrittersWorld, CrittersWorldSerializer } from '../../critters/CrittersWorld';\r\nimport { CView } from '../../critters/CView';\r\nimport { ComponentContainerDirective } from './component-container.directive';\r\nimport { LoginComponent } from './login.component';\r\nimport { RegistrationComponent } from './registration.component';\r\n\r\n@Component({\r\n    selector: 'app-sandbox',\r\n    templateUrl: 'sandbox.component.html',\r\n    styles: [\r\n    ]\r\n})\r\nexport class SandboxComponent implements OnInit {    \r\n\r\n    constructor(private http: HttpClient, private router: Router) {\r\n    }    \r\n\r\n    world!: CrittersWorld;\r\n    view!: CView;\r\n    editController!: CEditController;\r\n    editModel!: CEditModel;\r\n\r\n    // --------------------------------------------------------------\r\n\r\n    savePopup: SavePopup = new SavePopup();\r\n\r\n    loadPopup: LoadPopup = new LoadPopup();\r\n\r\n    @ViewChild(ComponentContainerDirective, { static: true }) dialogsHost!: ComponentContainerDirective;    \r\n\r\n    onSaveButton() {\r\n        this.savePopup.open(this.http, this.world);\r\n    }\r\n\r\n    onLoadButton() {\r\n        this.loadPopup.open(this.http, (w) => this.deserializeWorld(w));\r\n    }\r\n\r\n    deserializeWorld(data: number[]) {\r\n        this.world.Clear();        \r\n        for (let i = 0; i < data.length; i = i + 2) {\r\n            console.log(\"add cell\", data[i], data[i + 1]);\r\n            this.world.AddCell(data[i], data[i + 1]);\r\n        }\r\n        this.view.Repaint();\r\n    }\r\n\r\n    ngOnInit(): void {        \r\n        let canvas = document.getElementById(\"c_canvas\") as HTMLCanvasElement;\r\n        // ������� ���, ������� View, ������� � ������ c View, ������� View c �����;\r\n        // ���������������� ���, ����� ��������� ���������;\r\n        // ������� � �������� ������ ��������������;\r\n        // �������� ���������� ��� ��������������, �������������� ������� � ������������� �� � ���������\r\n        // ������ �������������� � ����\r\n        this.world = new CrittersWorld();\r\n        this.world.TestInit();\r\n        this.editModel = new CEditModel();\r\n        this.view = new CView(canvas, this.world, this.editModel);        \r\n        this.editController = new CEditController(canvas, this.world, this.editModel, () => this.view.Repaint());        \r\n        this.view.Repaint();        \r\n    }\r\n\r\n    onNext() {\r\n        console.log(\"onNext\");\r\n        this.world.RunSerie(1);\r\n        this.view.Repaint();\r\n    }\r\n\r\n}\r\n\r\nclass SavePopup {\r\n\r\n    titles: SandboxWorldTitleModel[] = [];\r\n    saveName: string = \"\";\r\n    selectedSave: SandboxWorldTitleModel | null = null;\r\n    http!: HttpClient;\r\n    world!: CrittersWorld;\r\n\r\n    savePopupDisplayStyle: string = \"none\";\r\n\r\n    open(http: HttpClient, world: CrittersWorld) {        \r\n        // some slots can be free, some - busy\r\n        // we show all array whith 10 slots;\r\n        // empty slots marked in list and have name ---------\r\n        // user can select slot and change name in dialog if neccessary;\r\n        // name applyed when user save world.        \r\n        this.http = http;\r\n        this.world = world;\r\n        this.titles = [];\r\n        this.saveName = \"\";\r\n        http.get<SandboxWorldTitleModel[]>(\"/sandboxworlds/titles\").subscribe(titles => {\r\n            this.titles = this.ToSlotList(titles);\r\n        });\r\n        this.savePopupDisplayStyle = \"block\";\r\n    }\r\n\r\n    ToSlotList(titles: SandboxWorldTitleModel[]): SandboxWorldTitleModel[] {\r\n        let result: SandboxWorldTitleModel[] = []\r\n        for (let i = 1; i <= 10; i++)\r\n            result.push({ id: -1, slot: i, name: \"<empty>\" });\r\n        for (let t of titles)\r\n            result[t.slot - 1] = t;\r\n        return result;\r\n    }\r\n\r\n    onSlotSelect(slot: any) {\r\n        this.selectedSave = this.titles[slot - 1];\r\n        if (this.selectedSave != null && this.selectedSave != undefined) {\r\n            this.saveName = this.selectedSave.id == -1 ? (\"World \" + this.selectedSave.slot) : this.selectedSave.name;\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.savePopupDisplayStyle = \"none\";\r\n    }\r\n\r\n    async onPopupOk() {\r\n        console.log(\"onSavePopupOk\");\r\n        this.savePopupDisplayStyle = \"none\";\r\n        // save current world to slot        \r\n        this.selectedSave!.name = this.saveName;\r\n        //this.selectedSave!.data = this.world.Serialize();\r\n        await this.SaveWorld(this.selectedSave).then(() => console.log(\"saved\"));\r\n        console.log(\"after save\");\r\n    }\r\n\r\n    SaveWorld(worldTitle: SandboxWorldTitleModel | null) {\r\n        let s = new CrittersWorldSerializer();\r\n        let cellsData = s.SerializeCells(this.world);\r\n        return lastValueFrom(this.http.post(\"/sandboxworlds/savetoslot\", { slot: worldTitle?.slot, newName: worldTitle?.name, cellsData: cellsData }));\r\n    }\r\n\r\n}\r\n\r\nclass LoadPopup {\r\n\r\n    titles: SandboxWorldTitleModel[] = [];    \r\n    selectedLoad: SandboxWorldTitleModel | null = null;\r\n    http!: HttpClient;    \r\n    resultCallback!: (cellsData: number[]) => void;\r\n\r\n    loadPopupDisplayStyle: string = \"none\";\r\n\r\n    open(http: HttpClient, resultCallback: (cellsData: number[]) => void) {    \r\n        this.http = http;\r\n        this.resultCallback = resultCallback;\r\n        this.titles = [];        \r\n        http.get<SandboxWorldTitleModel[]>(\"/sandboxworlds/titles\").subscribe(titles => {\r\n            this.titles = this.ToSlotList(titles);\r\n        });\r\n        this.loadPopupDisplayStyle = \"block\";\r\n    }\r\n\r\n    ToSlotList(titles: SandboxWorldTitleModel[]): SandboxWorldTitleModel[] {\r\n        let result: SandboxWorldTitleModel[] = []\r\n        for (let i = 1; i <= 10; i++)\r\n            result.push({ id: -1, slot: i, name: \"<empty>\" });\r\n        for (let t of titles)\r\n            result[t.slot - 1] = t;\r\n        return result;\r\n    }\r\n\r\n    onSlotSelect(slot: any) {\r\n        this.selectedLoad = this.titles[slot - 1];\r\n        console.log(\"onSlotSelect\", slot);\r\n        if (this.selectedLoad != null && this.selectedLoad != undefined) {\r\n            // enable buttons\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.loadPopupDisplayStyle = \"none\";\r\n    }\r\n\r\n    async onPopupOk() {\r\n        console.log(\"onLoadPopupOk\");\r\n        this.loadPopupDisplayStyle = \"none\";\r\n        // load selected world \r\n        let loaded = await lastValueFrom(this.http.get(\"/sandboxworlds/loadfromslot?slot=\" + this.selectedLoad?.slot));\r\n        console.log(\"after load\", (loaded as any).cellsData);\r\n        this.resultCallback((loaded as any).cellsData);\r\n    }\r\n\r\n}\r\n\r\n\r\nclass SandboxWorldTitleModel {\r\n    id: number = -1;\r\n    slot: number = 0;\r\n    name: string = \"\";    \r\n    }\r\n","<div style=\"background: black; height: 100vh; display: grid;\r\n       grid-template-rows: max-content auto;\">\r\n    <div style=\"background-color: #e3f2fd; \">\r\n        <button class=\"btn btn-outline-primary m-1\" routerLink=\"/home\">Home</button>\r\n        <button class=\"btn btn-outline-primary m-1\" (click)=\"onSaveButton()\">Save</button>\r\n        <button class=\"btn btn-outline-primary m-1\" (click)=\"onLoadButton()\">Load</button>\r\n    </div>\r\n    <div style=\"background-color: white; position: relative; overflow: hidden\">\r\n        <canvas id=\"c_canvas\" style=\"position: absolute; top: 0px; left: 0px; width: 100%; height: 100%;\r\n                height: 100%; background-color: white\"></canvas>\r\n        <button (click)=\"onNext()\" class=\"btn btn-outline-primary m-1\" style=\"position: absolute; left:30px; bottom: 30px;\">Step</button>\r\n    </div>\r\n\r\n    <div style=\"position: fixed\">\r\n        <ng-template component-container style=\"position: fixed\"></ng-template>\r\n    </div>\r\n\r\n    <div class=\"modal\"\r\n         tabindex=\"-1\"\r\n         role=\"dialog\"\r\n         [ngStyle]=\"{'display':savePopup.savePopupDisplayStyle}\">\r\n        <div class=\"modal-dialog\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h4 class=\"modal-title\">Save world</h4>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <select #saveTitlesSel multiple size=\"10\" class=\"form-select\" aria-label=\"Select slot to save\"\r\n                            style=\"overflow-y: auto;\"\r\n                            (change)=\"savePopup.onSlotSelect(saveTitlesSel.value)\">\r\n                        <option value={{title.slot}} *ngFor=\"let title of savePopup.titles\">{{title.name}}</option>\r\n                    </select>\r\n                    <br />\r\n                    <div #titleinput class=\"input-group mb-3\">\r\n                        <input #nameInput type=\"text\" class=\"form-control\" placeholder=\"World name\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                               value={{savePopup.saveName}}\r\n                               (input)=\"savePopup.saveName = nameInput.value\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-primary\"\r\n                            (click)=\"savePopup.onPopupOk()\">\r\n                        Save\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn btn-primary\"\r\n                            (click)=\"savePopup.close()\">\r\n                        Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"modal\"\r\n         tabindex=\"-1\"\r\n         role=\"dialog\"\r\n         [ngStyle]=\"{'display':loadPopup.loadPopupDisplayStyle}\">\r\n        <div class=\"modal-dialog\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h4 class=\"modal-title\">Load world</h4>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <select #loadTitlesSel multiple size=\"10\" class=\"form-select\" aria-label=\"Select world\"\r\n                            style=\"overflow-y: auto;\"\r\n                            (change)=\"loadPopup.onSlotSelect(loadTitlesSel.value)\">\r\n                        <option value={{title.slot}} *ngFor=\"let title of loadPopup.titles\">{{title.name}}</option>\r\n                    </select>\r\n                    <br />\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-primary\"\r\n                            (click)=\"loadPopup.onPopupOk()\">\r\n                        Load\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn btn-primary\"\r\n                            (click)=\"loadPopup.close()\">\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n</div>\r\n\r\n<!--\r\n<div style=\"background: black; height: 100vh; display: flex; flex-direction: column; align-items: stretch\">\r\n    <div style=\"background-color:aquamarine; min-height: 60px\">\r\n        panel 1\r\n    </div>    \r\n    <div style=\"background-color: coral; height: 100%; position: relative; overflow: hidden\">        \r\n        <div style=\"background-color: burlywood\">            \r\n            <div style=\"position: absolute; right:100px; bottom: 50px\">ssssssssssssss</div>\r\n        </div>\r\n    </div>\r\n</div> \r\n    !-->","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { LoginService, UserInfo } from '../services/login.service';\r\nimport { ComponentContainerDirective } from './component-container.directive';\r\nimport { LoginComponent } from './login.component';\r\nimport { RegistrationComponent } from './registration.component';\r\n\r\n@Component({\r\n  selector: 'app-startpage',\r\n    templateUrl: \"startpage.component.html\",\r\n  styles: [\r\n  ]\r\n})\r\nexport class StartpageComponent implements OnInit {\r\n\r\n    constructor(private loginService: LoginService) { }\r\n\r\n  @ViewChild(ComponentContainerDirective, { static: true }) dialogsHost!: ComponentContainerDirective;\r\n\r\n    userInfo: UserInfo = { email: \"\", signedIn: false };\r\n;\r\n\r\n    async ngOnInit() {\r\n        this.userInfo = await this.loginService.getCurrentUserInfo();\r\n        console.log(this.userInfo);\r\n    }\r\n\r\n    Login() {\r\n        let login = this.dialogsHost.viewContainerRef.createComponent(LoginComponent);\r\n        login.instance.result.subscribe(async evt => {\r\n            this.dialogsHost.viewContainerRef.clear();\r\n            if (evt == 'register') {\r\n                let register = this.dialogsHost.viewContainerRef.createComponent(RegistrationComponent);\r\n                register.instance.result.subscribe(evt => {\r\n                    this.dialogsHost.viewContainerRef.clear();\r\n                });\r\n            }\r\n            this.userInfo = await this.loginService.getCurrentUserInfo();\r\n        }\r\n        );        \r\n    }\r\n\r\n    async Logout() {\r\n        await this.loginService.Logout();\r\n        this.userInfo = await this.loginService.getCurrentUserInfo();\r\n    }\r\n\r\n}\r\n","<div class=\"container-fluid vh-100 bg-light\">\n    <header class=\"container-fluid bg-light\">\n        <nav class=\"navbar navbar-expand-lg navbar-light fs-4\" style=\"background-color: #e3f2fd;\">\n            <div class=\"container-fluid\">\n                <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span class=\"navbar-toggler-icon\"></span>\n                </button>\n                <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul class=\"navbar-nav me-auto mb-2 mb-lg-0 justify-content-between w-50\">\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link active\" aria-current=\"page\" routerLink=\"/home\">Home</a>\n                        </li>\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link\" routerLink=\"/sandbox\">Sandbox</a>\n                        </li>\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link\" routerLink=\"/wiki\">Investigation</a>\n                        </li>\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link\" routerLink=\"/play\">Game</a>\n                        </li>\n                    </ul>\n                    <label *ngIf=\"userInfo.signedIn\" class=\"text-body me-2 fs-5\">User: {{userInfo.email}}</label>\n                    <button *ngIf=\"userInfo.signedIn\" class=\"btn btn-outline-primary my-2 my-sm-0\" type=\"submit\" (click)=\"Logout()\">Logout</button>\n                    <button *ngIf=\"!userInfo.signedIn\" class=\"btn btn-outline-primary my-2 my-sm-0\" type=\"submit\" (click)=\"Login()\">Login</button>\n                </div>\n            </div>\n        </nav>\n    </header>\n\n    <div class=\"container-fluid\">\n        <br>\n        Critters is defined on a two-dimensional infinite grid of cells, which may be identified with the integer lattice. As in Conway's Game of Life, at any point in time each cell may be in one of two states: alive or dead. The Critters rule is a block cellular automaton using the Margolus neighborhood. This means that, at each step, the cells of the automaton are partitioned into 2 × 2 blocks and each block is updated independently of the other blocks. The center of a block at one time step becomes the corner of four blocks at the next time step, and vice versa; in this way, the four cells in each block belong to four different 2 × 2 blocks of the previous partition.\n        <br> (Wikipedia)\n    </div>\n</div>\n\n<div style=\"position: fixed\">\n    <ng-template component-container style=\"position: fixed\"></ng-template>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-wiki',\n  template: `\n    <p>\n      wiki works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class WikiComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { CEditModel } from \"./CEditModel\";\r\nimport { CrittersWorld } from \"./CrittersWorld\";\r\n\r\nexport class CEditController {\r\n    constructor(canvas: HTMLCanvasElement, cWorld: CrittersWorld, editModel: CEditModel, repaint: ()=>void) {\r\n        this.canvas = canvas;\r\n        this.cWorld = cWorld;\r\n        this.editModel = editModel;\r\n        this.repaint = repaint;\r\n\r\n        this.AddEventsToCanvas();\r\n    }\r\n\r\n    AddEventsToCanvas() {\r\n        this.canvas.addEventListener(\"mousedown\", (e) => this.MouseDownHandler(e));\r\n\r\n    }\r\n\r\n    MouseDownHandler(event: any) {\r\n        console.log(\"on mouse down\", event.offsetX, event.offsetY,\r\n            Math.floor(this.editModel.ScrXToCell(event.offsetX)),\r\n            Math.floor(this.editModel.ScrYToCell(event.offsetY)));\r\n        let x = Math.floor(this.editModel.ScrXToCell(event.offsetX));\r\n        let y = Math.floor(this.editModel.ScrYToCell(event.offsetY));\r\n        if (this.cWorld.GetCell(x, y) === undefined)\r\n            this.cWorld.AddCell(x, y);\r\n        else\r\n            this.cWorld.ClearCell(x, y);\r\n        this.repaint();\r\n    }\r\n\r\n    canvas!: HTMLCanvasElement;\r\n    cWorld!: CrittersWorld;\r\n    editModel!: CEditModel;\r\n    repaint!: () => void;\r\n\r\n}\r\n","\r\nexport class CEditModel {\r\n\r\n    scale: number = 10;\r\n    X: number = 0;\r\n    Y: number = 0;\r\n    gridActual: boolean = false;\r\n\r\n    CellXToScr(x: number): number {\r\n        return (x - this.X) * this.scale;\r\n    }\r\n\r\n    CellYToScr(y: number): number {\r\n        return (y - this.Y) * this.scale;\r\n    }\r\n\r\n    CelldXToScr(dx: number) {\r\n        return dx * this.scale;\r\n    }\r\n\r\n    CelldYToScr(dy: number) {\r\n        return dy * this.scale;\r\n    }\r\n\r\n    ScrXToCell(x: number) {\r\n        return this.X + x / this.scale;\r\n    }\r\n\r\n    ScrYToCell(y: number) {\r\n        return this.Y + y / this.scale;\r\n    }\r\n\r\n    ScrdXToCell(x: number) {\r\n        return x / this.scale;\r\n    }\r\n\r\n    ScrdYToCell(y: number) {\r\n        return y / this.scale;\r\n    }\r\n}\r\n","import { CEditModel } from \"./CEditModel\";\r\nimport { CrittersWorld } from \"./CrittersWorld\";\r\n\r\nexport class CView {\r\n    public constructor(canvas: HTMLCanvasElement, world: CrittersWorld, editModel: CEditModel) {\r\n        this.canvas = canvas;\r\n        this.world = world;\r\n        this.editModel = editModel;\r\n    }\r\n\r\n    canvas!: HTMLCanvasElement;\r\n    world!: CrittersWorld;\r\n    editModel!: CEditModel;\r\n\r\n    Repaint() {\r\n        let ctx = this.canvas.getContext('2d');\r\n        ctx!.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        ctx!.canvas.width = ctx!.canvas.clientWidth;\r\n        ctx!.canvas.height = ctx!.canvas.clientHeight;\r\n        ctx!.fillStyle = \"green\";\r\n        for (let c_e of this.world.cells.entries()) {\r\n            let c = c_e[1];\r\n            let x = this.editModel.CellXToScr(c.x);\r\n            let y = this.editModel.CellYToScr(c.y);\r\n            if (x < this.canvas.width && x > 0 - this.editModel.scale\r\n                && y > 0 - this.editModel.scale && y < this.canvas.height) {\r\n                ctx!.fillRect(x, y, this.editModel.scale, this.editModel.scale);\r\n            }            \r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n// на входе получает провайдер canvas, мир, модель отображения, модель редактирования;\r\n// по команде извне рисует на канвасе мир, согласно модели отображения и добавляет модель редактирования;\r\n// остальную логику выполняют контроллеры\r\n","export class CrittersWorld {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    cells: Map<number, Cell> = new Map<number, Cell>();    \r\n\r\n    public AddAxisX: number = 0;\r\n    public AddAxisY: number = 0;                \r\n\r\n    public AddCell(x: number, y: number): Cell {\r\n        let key = x * 1000000000 + y;\r\n        let resultCell = new Cell(this.NextCellKey(), x, y, this.stepNum);\r\n        this.cells.set(key, resultCell);\r\n        return resultCell;\r\n    }\r\n\r\n    nextCellKey: number = 0;\r\n\r\n    NextCellKey(): number {\r\n        this.nextCellKey++;\r\n        return this.nextCellKey;\r\n    }\r\n        \r\n    // Очистить клетку, если занята        \r\n    public ClearCell(x: number, y: number) {\r\n        let key = x * 1000000000 + y;\r\n        let c = this.cells.get(key);\r\n        if (c)\r\n            this.RemoveCell(key, c);\r\n    }\r\n\r\n    private RemoveCell(key: number, cl: Cell) {\r\n        this.cells.delete(key);\r\n    }\r\n\r\n    public SetAdditionalAxis(xA: number, yA: number) {\r\n        this.AddAxisX = xA;\r\n        this.AddAxisY = yA;\r\n    }\r\n\r\n    public IsEvenStep(): boolean {\r\n        return this.stepNum % 2 == 0;\r\n    }\r\n\r\n    public EvenState(): boolean {\r\n        return this.stepNum % 2 == 0;\r\n    }\r\n\r\n    public RunSerie(stepCnt: number) {\r\n        for (let i = 0; i < stepCnt; i++)\r\n            this.Run();\r\n    }\r\n\r\n    public Clear() {\r\n        this.cells.clear();\r\n        this.nextCellKey = 0;\r\n        this.stepNum = 0;\r\n    }\r\n\r\n    stepNum: number = 0;\r\n\r\n    public ReverseTimeDirection() {\r\n        this.stepNum++;\r\n    }\r\n\r\n    private Run() {\r\n        this.stepNum++;\r\n        let evenStep = this.stepNum % 2 == 0;\r\n        for (let c_e of this.cells.entries()) {\r\n            let c = c_e[1];\r\n            if (c.prosessedStep != this.stepNum) {\r\n                let xc = c.x;\r\n                let yc = c.y;\r\n                    // позиция ячейки\r\n                let xgc = xc - (((xc % 2 == 0) == evenStep) ? 0 : 1);\r\n                let ygc = yc - (((yc % 2 == 0) == evenStep) ? 0 : 1);\r\n                // другие клетки в ячейке\r\n                let gc00: Cell | undefined;\r\n                let gc11: Cell | undefined;\r\n                let gc01: Cell | undefined;\r\n                let gc10: Cell | undefined;\r\n                let c00: boolean = false, c11: boolean = false, c01: boolean = false, c10: boolean = false;\r\n                gc00 = this.cells.get(xgc * 1000000000 + ygc);\r\n                c00 = gc00 != undefined;\r\n                gc11 = this.cells.get((xgc + 1) * 1000000000 + (ygc + 1));\r\n                c11 = gc11 != undefined;\r\n                gc01 = this.cells.get(xgc * 1000000000 + (ygc + 1));\r\n                c01 = gc01 != undefined;\r\n                gc10 = this.cells.get((xgc + 1) * 1000000000 + ygc);\r\n                c10 = gc10 != undefined;\r\n                // определить действие в зависимости от положения \r\n                let cellCnt = (gc00 == null ? 0 : 1) + (gc11 == null ? 0 : 1) + (gc01 == null ? 0 : 1) + (gc10 == null ? 0 : 1);\r\n                if (cellCnt == 1) {\r\n                    // это единственная ячейка - двигать на нечетных шагах по диагонали\r\n                    if (!evenStep) {\r\n                        if (xgc == xc)\r\n                            c.x++;\r\n                        else\r\n                            c.x--;\r\n                        if (ygc == yc)\r\n                            c.y++;\r\n                        else\r\n                            c.y--;\r\n                    }\r\n                }\r\n                else if (cellCnt == 2) {\r\n                    // две ячейки: 6 вариантов инверсии\r\n                    if (c00 && c00 == c11) {\r\n                        // 10\r\n                        // 01\r\n                        gc00!.x++;\r\n                        gc11!.x--;\r\n                    }\r\n                    else if (c01 && c01 == c10) {\r\n                        // 01\r\n                        // 10\r\n                        gc01!.x++;\r\n                        gc10!.x--;\r\n                        //gc01.y--;\r\n                        //gc10.y++;\r\n                    }\r\n                    else if (c00 && c00 == c10) {\r\n                        // 11\r\n                        // 00\r\n                        gc00!.y++;\r\n                        gc10!.y++;\r\n                    }\r\n                    else if (c01 && c01 == c11) {\r\n                        // 00\r\n                        // 11\r\n                        gc01!.y--;\r\n                        gc11!.y--;\r\n                    }\r\n                    else if (c00 && c00 == c01) {\r\n                        // 10\r\n                        // 10\r\n                        gc00!.x++;\r\n                        gc01!.x++;\r\n                    }\r\n                    else {\r\n                        // 01\r\n                        // 01\r\n                        gc10!.x--;\r\n                        gc11!.x--;\r\n                    }\r\n                }\r\n                else if (cellCnt == 3) {\r\n                    if (evenStep) {\r\n                        if (!c00) {\r\n                            gc11!.x--;\r\n                            gc11!.y--;\r\n                        }\r\n                        else if (!c11) {\r\n                            gc00!.x++;\r\n                            gc00!.y++;\r\n                        }\r\n                        else if (!c01) {\r\n                            gc10!.x--;\r\n                            gc10!.y++;\r\n                        }\r\n                        else {\r\n                            gc01!.x++;\r\n                            gc01!.y--;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (c00)\r\n                    gc00!.prosessedStep = this.stepNum;\r\n                if (c11)\r\n                    gc11!.prosessedStep = this.stepNum;\r\n                if (c01)\r\n                    gc01!.prosessedStep = this.stepNum;\r\n                if (c10)\r\n                    gc10!.prosessedStep = this.stepNum;\r\n            }\r\n        }\r\n        let cellsNew = new Map<number, Cell>();\r\n        for (let c_e of this.cells.entries()) {\r\n            let c = c_e[1];\r\n            cellsNew.set(c.x * 1000000000 + c.y, c);\r\n        }\r\n        this.cells = cellsNew;        \r\n    }\r\n\r\n    public GetCellsCount(): number {\r\n        return this.cells.size;\r\n    }\r\n\r\n    public GetCell(x: number, y: number): Cell | undefined {        \r\n        return this.cells.get(x * 1000000000 + y);\r\n    }\r\n\r\n    public FindInArea(rectangle: CRect): Cell[] {\r\n        let result: Cell[] = [];\r\n        for (let c of this.cells.entries()) {\r\n            let cell = c[1];\r\n            if (rectangle.ContainsInXY(cell.x, cell.y))\r\n                result.push(cell);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public DeleteCells(deleted: Cell[]) {        \r\n        for (let c of deleted) \r\n            this.cells.delete(c.GetKey());\r\n    }\r\n\r\n    public MoveCellsTo(cls: Cell[], dx: number, dy: number) {\r\n        /*foreach(var c in cls)\r\n        cells.Remove(c.GetKey());\r\n        foreach(var c in cls)\r\n        {\r\n            c.x += dx;\r\n            c.y += dy;\r\n        }\r\n        foreach(var c in cls)\r\n        cells.Add(c.GetKey(), c);*/\r\n    }\r\n\r\n    public TestInit() {\r\n        this.AddCell(10, 10);\r\n        this.AddCell(11, 11);\r\n        this.AddCell(10, 11);\r\n        this.AddCell(12, 11);\r\n    }\r\n\r\n}\r\n\r\nexport class CrittersWorldSerializer {\r\n\r\n    public SerializeCells(w: CrittersWorld): number[] {\r\n        let result = [];\r\n        for (let cellD of w.cells.entries()) {\r\n            let c = cellD[1];\r\n            result.push(c.x);\r\n            result.push(c.y);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public DeserializeCells(cellsData: number[], cw: CrittersWorld) {        \r\n        for (let n = 0; n < cellsData.length; n=n+2) {\r\n            cw.AddCell(cellsData[n], cellsData[n + 1]);\r\n        }\r\n    }\r\n}\r\n\r\nexport class Cell {\r\n    public constructor(id: number, x: number, y: number, procStep: number) {\r\n        this.id = id;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.prosessedStep = procStep;\r\n    }\r\n    \r\n    // Уникальный ключ    \r\n    public id: number;\r\n\r\n    public x: number;\r\n    public y: number;\r\n    public prosessedStep: number;\r\n \r\n    public GetKey(): number\r\n    {\r\n        return this.x * 1000000000 + this.y;\r\n    }\r\n\r\n    public MoveTo(toX: number, toY: number)\r\n    {\r\n        this.x = toX;\r\n        this.y = toY;\r\n    }\r\n\r\n}\r\n\r\nexport class CRect {\r\n    public constructor(x: number, y: number, width: number, height: number) {\r\n        this.X = x;\r\n        this.Y = y;\r\n        this.Width = width;\r\n        this.Height = height;\r\n    }\r\n\r\n    public Width: number;\r\n    public Height: number;\r\n    public X: number;\r\n    public Y: number;\r\n\r\n    public GetTop(): number { return this.Y; }\r\n    public GetRight(): number { return this.X + this.Width; }\r\n    public GetLeft(): number { return this.X; }\r\n    public GetBottom(): number { return this.Y + this.Height; }\r\n\r\n    public ContainsInXY(x: number, y: number): boolean {\r\n        return x >= this.X && x < this.X + this.Width && y >= this.Y && y < this.Y + this.Height;\r\n    }\r\n\r\n    public Contains(p: CPoint): boolean {\r\n        return p.X >= this.X && p.X < this.X + this.Width && p.Y >= this.Y && p.Y < this.Y + this.Height;\r\n    }\r\n}\r\n\r\nexport class CPoint {\r\n    public constructor(x: number, y: number) {\r\n        this.X = x;\r\n        this.Y = y;\r\n    }\r\n    public X: number;\r\n    public Y: number;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["lastValueFrom","LoginService","constructor","http","Logout","get","getCurrentUserInfo","i0","factory","providedIn","UserInfo","EventEmitter","LoginComponent","ngOnInit","onOkButton","res","post","Mail","eMail","Password","password","console","log","result","emit","loginFailed","onCancelButton","onRegisterButton","selectors","outputs","decls","vars","consts","template","ctx","RegistrationComponent","success","registrationFailed","registrationError","errorDescription","CEditController","CEditModel","CrittersWorld","CrittersWorldSerializer","CView","ComponentContainerDirective","SandboxComponent","router","SavePopup","LoadPopup","onSaveButton","savePopup","open","world","onLoadButton","loadPopup","w","deserializeWorld","data","Clear","i","length","AddCell","view","Repaint","canvas","document","getElementById","TestInit","editModel","editController","onNext","RunSerie","viewQuery","titles","saveName","subscribe","ToSlotList","savePopupDisplayStyle","push","id","slot","name","t","onSlotSelect","selectedSave","undefined","close","onPopupOk","SaveWorld","then","worldTitle","s","cellsData","SerializeCells","newName","resultCallback","loadPopupDisplayStyle","selectedLoad","loaded","SandboxWorldTitleModel","StartpageComponent","loginService","email","signedIn","userInfo","Login","login","dialogsHost","viewContainerRef","createComponent","instance","evt","clear","register"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}